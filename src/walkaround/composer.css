/* FONTS */
body * {
    font-family: 'Roboto', sans-serif;
}
em {
    color: #194a5e;
}
b {
    font-weight: bold;
}

/* LAYOUT */
body {
    display: flex;
    flex-direction: row;
    
    height: calc(100vh - 16px);
    width: calc(100vw - 16px);
    overflow: hidden;
}
@media screen and (max-aspect-ratio: 1000/978) {
    /* Screen is narrow, put thumbs below stage */
    body {
        flex-direction: column;
    }
}
.grouped {
    height: fit-content;
    box-sizing: border-box;
    margin: 0.5vh;
    padding: 1vh;
    border-radius: 4px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
}
.ungrouped {
    height: fit-content;
    box-sizing: border-box;
    margin: 0.5vh;
    padding: 1vh;
}
.has-hover {
    position: relative;
}
.hover {
    position: absolute;
    z-index: 1;
}
.hover::after {
    position:absolute;
    content: "";
    height: 100%;
    width: 100%;
    left: 0;
    top: 0;
    box-shadow: 0 0 10px rgba(1,1,1,0.3);
}
.hover.left   {left:   5px;}
.hover.right  {right:  5px;}
.hover.top    {top:    5px;}
.hover.bottom {bottom: 5px;}
.hidden {
    display: none;
}



/* ELEMENTS */
button {
    padding: 4px;
    text-align: center;
    font-size: 1em;
    font-weight: 500;
    color: #eee;
    background: #32728C;
    box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
    cursor: pointer;
    border: initial;
}
button.disabled, button.disabled:hover {
    color:            #666666;
    background-color: inherit;
    pointer-events: none;
    opacity: 0.5;
    box-shadow: 0px 0px 2px 1px grey;
}



/* CONTAINERS */
#stage-container {
    flex-basis: 200px;
    max-height: 80vh;
    /* .ungrouped isn't intended for things that have full-size children */
    padding: 0;
}
@media screen and (min-aspect-ratio: 1000/978) {
    /* Screen is wide, make stage grow */
    #stage-container {
        flex-grow: 6;
        max-height: calc(100% - 16px)
    }
}
#thumbs {
    /* child layout */
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    overflow: hidden auto;
    scrollbar-width: thin;
    
    /* this element layout */
    /* min-height is the height of one .img-container */
    min-height: 20%;
    flex-grow: 0;
}
@media screen and (min-aspect-ratio: 1000/978) {
    #thumbs {
        flex-grow: 1;
        flex-basis: 200px;
    }
}
.img-container {
    position: relative;
    /* basis includes #thumbs{gap:10px}, times four gaps distributed over five "columns" */
    flex-basis: calc(20% - 10px * 4 / 5);
    flex-shrink: 1;
}
@media screen and (min-aspect-ratio: 1000/978) {
    .img-container {
        /* basis includes #thumbs{gap:10px}, distributed over two "columns" */
        flex-basis: calc(50% - 10px / 2);
    }
}
.img-container img {
    /* make thumbnails square */
    width: 100%;
    aspect-ratio: 1/1;
    object-fit: cover;
    
    /* allow corner snipping */
    overflow: hidden;
    /* style container */
    border-radius: 4px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
    display: flex;
}



/* STAGE AND THUMBNAILS */
walkaround-viewer {
    /* For the life of me, I cannot figure out why 100% does not work below. It
    winds up with unbounded height for very wide windows. What is the containing
    block here, and why isn't it statically-positioned #stage-container?! It
    cant be html, right? */
    /* Subtract margin used by body and #stage-container */
    max-height: calc(100vh - 16px - 1vh);
}
.placeholder {
    /* appearance */
    color: grey;
    font-size: 2em;
    user-select: none;
    /* alignment, skewed slightly left to make room for download button */
    width: 90%;
    align-self: center;
    text-align: center;
}
.placeholder:not(:last-child) {
    /* Because thumbnails get added to the end of #thumbs,
    the placeholder can hide itself when there's anything
    below it. */
    display: none;
}



/* THUMBNAIL HOVERING DELETE BUTTON */
#thumbs:not(:hover) .hover-bar {visibility: hidden;}
.delete-icon {
    /* style */
    background-color: black;
    transition: background-color .1s;
    /* icon */
    mask-image: url("/icons/x-circle-fill.svg");
    mask-size: 100%;
    mask-position: 100%;
    mask-repeat: no-repeat;
    /* size and position */
    position: absolute;
    height: 20%;
    width: 20%;
    right: -2%;
    top: -5%;
    content: "";
    
}
.delete-icon:hover {
    background-color: #db392b;
}
.delete-icon::after {
    filter: drop-shadow(1px 1px 4px rgba(0,0,0,0.75))
}



/* BUTTONS */
button.hover {
    height: 60px;
    aspect-ratio: 1/1;
    border-radius: 100%;
    
    background-size: 69%;
    background-position: center;
    background-repeat: no-repeat;
}
button.hover::after {
    border-radius: 100%;
}
#save-view {
    background-image: url("/icons/camera-fill.svg");
}
#dl-all {
    background-image: url("/icons/download.svg");
}
#help {
    background-image: url("/icons/info-lg.svg");
}



/* HELP POPUP */
#help-popup {
    background-color: white;
    
    /* Look like a card, but add a fluffy cloud to help stand out */
    border-radius: 4px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.12),
                0 1px 2px rgba(0,0,0,0.24),
                0 0 30px 10px rgba(47, 47, 47, 0.3);
    
    /* Position in the middle of the window */
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 5;
    
    /* Allow appearance animation */
    opacity: 1;
    visibility: visible;
    transition: all 0.3s;
}
#help-popup.fade-out {
    opacity: 0;
    visibility: hidden;
}
#help-popup > * {
    /* This goes here because (at least) Firefox adds inline margins. We need to
   make sure margins are always overwritten evenly. */
    margin: 16px;
}
#help-popup h3 {
    text-align: center;
}


